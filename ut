#!/usr/bin/env python

import sys
from time import *
from string import *

# -*- Mode: Python -*-

def parsedate (s):
	num = map (atoi, split (s, '/'))

	if len (num) > 3:
		raise ValueError

	dt = localtime (time ())

	if len (num) == 1:
		num = [dt [1], num [0], dt [0]]
	elif len (num) == 2:
		num = [num [0], num [1], dt [0]]

	t = int (mktime ((num [2], num [0], num [1], 0, 0, 0, 0, 0, -1)))

	return t


def parsetod (s):
	num = map (strip, split (s, ':'))

	if len (num) > 3:
		raise ValueError

	t = int (num [0]) * 60 * 60

	if len (num) >= 2:
		t = t + (int (num [1]) * 60)

	if len (num) >= 3:
		t = t + int (num [2])

	return t


def main ():
	if len (sys.argv) == 1:
		t = int (time ())

	elif len (sys.argv) == 2:
		try:
            # throw out the fractions-of-seconds in the arg
			timeparts = split((sys.argv [1]), '.')
			t = atoi (timeparts[0])

		except ValueError:
			try:
				t = parsetod (sys.argv [1])

			except ValueError:
				t = parsedate (sys.argv [1])
		
			else:
				lt = localtime (time ())
				t  = int (mktime ((lt [0], lt [1], lt [2], 0, 0, t, lt [6], lt [7], lt [8])))

	elif len (sys.argv) == 3:
		t = parsedate (sys.argv [1]) + parsetod (sys.argv [2])

	else:
		raise 'SYNTAX: UT [(unix time) | (hour:min[:sec]) | ((day | mon/day[/year]) [hour[:min[:sec]]])]'

	print 'Time is: ' + ctime (t) + ', ' + str (t) + ', ' + hex (t)


if __name__ == '__main__':
	main ()
